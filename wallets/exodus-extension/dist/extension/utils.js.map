{"version":3,"sources":["../../src/extension/utils.ts"],"sourcesContent":["import { ClientNotExistError } from '@cosmos-kit/core';\n\nimport type { Exodus, ExodusWindow } from '../types';\n\nexport const getExodusFromExtension: () => Promise<\n  Exodus | undefined\n> = async () => {\n  if (typeof window === 'undefined') {\n    return void 0;\n  }\n\n  const exodus = ((window as unknown) as ExodusWindow).exodus;\n\n  if (exodus) {\n    return exodus;\n  }\n\n  if (document.readyState === 'complete') {\n    if (exodus) {\n      return exodus;\n    } else {\n      throw ClientNotExistError;\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    const documentStateChange = (event: Event) => {\n      if (\n        event.target &&\n        (event.target as Document).readyState === 'complete'\n      ) {\n        if (exodus) {\n          resolve(exodus);\n        } else {\n          reject(ClientNotExistError.message);\n        }\n        document.removeEventListener('readystatechange', documentStateChange);\n      }\n    };\n\n    document.addEventListener('readystatechange', documentStateChange);\n  });\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoC;AAI7B,IAAM,yBAET,YAAY;AACd,MAAI,OAAO,WAAW,aAAa;AACjC,WAAO;AAAA,EACT;AAEA,QAAM,SAAW,OAAoC;AAErD,MAAI,QAAQ;AACV,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,eAAe,YAAY;AACtC,QAAI,QAAQ;AACV,aAAO;AAAA,IACT,OAAO;AACL,YAAM;AAAA,IACR;AAAA,EACF;AAEA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,sBAAsB,CAAC,UAAiB;AAC5C,UACE,MAAM,UACL,MAAM,OAAoB,eAAe,YAC1C;AACA,YAAI,QAAQ;AACV,kBAAQ,MAAM;AAAA,QAChB,OAAO;AACL,iBAAO,gCAAoB,OAAO;AAAA,QACpC;AACA,iBAAS,oBAAoB,oBAAoB,mBAAmB;AAAA,MACtE;AAAA,IACF;AAEA,aAAS,iBAAiB,oBAAoB,mBAAmB;AAAA,EACnE,CAAC;AACH;","names":[]}