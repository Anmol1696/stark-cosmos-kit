{"version":3,"sources":["../../src/extension/client.ts"],"sourcesContent":["import { BroadcastMode, DirectSignDoc, WalletClient } from '@cosmos-kit/core';\n\nimport type {\n  AccountData,\n  DirectSignResponse,\n  ExodusCosmosProvider,\n  StdSignDoc,\n} from '../types';\n\nexport class ExodusClient implements WalletClient {\n  readonly client: ExodusCosmosProvider;\n\n  constructor(client: ExodusCosmosProvider) {\n    this.client = client;\n  }\n\n  async connect(chainId: string | string[]) {\n    await this.client.connect({\n      chainId: Array.isArray(chainId) ? chainId[0] : chainId,\n    });\n  }\n\n  async getSimpleAccount(chainId: string) {\n    const { address } = await this.getAccount(chainId);\n    return {\n      namespace: 'cosmos',\n      chainId,\n      address,\n    };\n  }\n\n  async getAccount(chainId: string) {\n    const response = await this.client.connect({ chainId });\n\n    return {\n      ...response,\n      pubkey: response.publicKey,\n    };\n  }\n\n  async getOfflineSigner(chainId: string) {\n    return {\n      getAccounts: async (): Promise<AccountData[]> => [\n        await this.getAccount(chainId),\n      ],\n      signDirect: async (\n        signer: string,\n        signDoc: DirectSignDoc\n      ): Promise<DirectSignResponse> => {\n        return this.client.signTransaction(signDoc);\n      },\n    };\n  }\n\n  async signAmino(chainId: string, signer: string, signDoc: StdSignDoc) {\n    return this.client.signAminoTransaction(signDoc);\n  }\n\n  async sendTx(chainId: string, transaction: Uint8Array, mode: BroadcastMode) {\n    return this.client.sendTx(chainId, transaction, mode);\n  }\n}\n"],"mappings":";AASO,IAAM,eAAN,MAA2C;AAAA,EAGhD,YAAY,QAA8B;AACxC,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,MAAM,QAAQ,SAA4B;AACxC,UAAM,KAAK,OAAO,QAAQ;AAAA,MACxB,SAAS,MAAM,QAAQ,OAAO,IAAI,QAAQ,CAAC,IAAI;AAAA,IACjD,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,iBAAiB,SAAiB;AACtC,UAAM,EAAE,QAAQ,IAAI,MAAM,KAAK,WAAW,OAAO;AACjD,WAAO;AAAA,MACL,WAAW;AAAA,MACX;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAM,WAAW,SAAiB;AAChC,UAAM,WAAW,MAAM,KAAK,OAAO,QAAQ,EAAE,QAAQ,CAAC;AAEtD,WAAO;AAAA,MACL,GAAG;AAAA,MACH,QAAQ,SAAS;AAAA,IACnB;AAAA,EACF;AAAA,EAEA,MAAM,iBAAiB,SAAiB;AACtC,WAAO;AAAA,MACL,aAAa,YAAoC;AAAA,QAC/C,MAAM,KAAK,WAAW,OAAO;AAAA,MAC/B;AAAA,MACA,YAAY,OACV,QACA,YACgC;AAChC,eAAO,KAAK,OAAO,gBAAgB,OAAO;AAAA,MAC5C;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAM,UAAU,SAAiB,QAAgB,SAAqB;AACpE,WAAO,KAAK,OAAO,qBAAqB,OAAO;AAAA,EACjD;AAAA,EAEA,MAAM,OAAO,SAAiB,aAAyB,MAAqB;AAC1E,WAAO,KAAK,OAAO,OAAO,SAAS,aAAa,IAAI;AAAA,EACtD;AACF;","names":[]}