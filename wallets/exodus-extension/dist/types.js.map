{"version":3,"sources":["../src/types.ts"],"sourcesContent":["import type { AminoSignResponse, StdSignDoc } from '@cosmjs/amino';\nimport type { AccountData, DirectSignResponse } from '@cosmjs/proto-signing';\nimport type { BroadcastMode, DirectSignDoc } from '@cosmos-kit/core';\n\ntype Chain = string;\n\ninterface ConnectionOptions {\n  chainId: Chain;\n}\n\ntype Account = AccountData & { publicKey: Uint8Array };\n\nexport interface ExodusCosmosProvider {\n  connect: (options: ConnectionOptions) => Promise<Account>;\n  signTransaction: (transaction: DirectSignDoc) => Promise<DirectSignResponse>;\n  signAminoTransaction: (\n    aminoTransaction: StdSignDoc\n  ) => Promise<AminoSignResponse>;\n  sendTx: (\n    chainId: string,\n    rawTx: Uint8Array,\n    mode: BroadcastMode\n  ) => Promise<Uint8Array>;\n}\n\nexport interface Exodus {\n  cosmos: ExodusCosmosProvider;\n}\n\nexport interface ExodusWindow {\n  exodus: Exodus;\n}\n\nexport type {\n  AccountData,\n  BroadcastMode,\n  DirectSignDoc,\n  DirectSignResponse,\n  StdSignDoc,\n};\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}