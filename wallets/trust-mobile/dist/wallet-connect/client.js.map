{"version":3,"sources":["../../src/wallet-connect/client.ts"],"sourcesContent":["import { DirectSignDoc, SignOptions, Wallet } from '@cosmos-kit/core';\nimport { WCClient } from '@cosmos-kit/walletconnect';\nimport { AminoSignResponse, StdSignDoc } from '@cosmjs/amino';\nimport { DirectSignResponse } from '@cosmjs/proto-signing';\n\nexport class TrustClient extends WCClient {\n  constructor(walletInfo: Wallet) {\n    super(walletInfo);\n  }\n\n  getOfflineSignerAmino = void 0;\n\n  async signAmino(\n    chainId: string,\n    signer: string,\n    signDoc: StdSignDoc,\n    signOptions?: SignOptions\n  ): Promise<AminoSignResponse> {\n    throw new Error(\"Trust doesn't support `signAmino` method.\");\n  }\n\n  async signDirect(\n    chainId: string,\n    signer: string,\n    signDoc: DirectSignDoc,\n    signOptions?: SignOptions\n  ): Promise<DirectSignResponse> {\n    // Trust doesn't return signed, using signDoc instead\n    const result = (await this._signDirect(\n      chainId,\n      signer,\n      signDoc,\n      signOptions\n    )) as any;\n    return {\n      signed: signDoc as DirectSignResponse['signed'],\n      signature: result,\n    };\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,2BAAyB;AAIlB,IAAM,cAAN,cAA0B,8BAAS;AAAA,EACxC,YAAY,YAAoB;AAC9B,UAAM,UAAU;AAGlB,iCAAwB;AAAA,EAFxB;AAAA,EAIA,MAAM,UACJ,SACA,QACA,SACA,aAC4B;AAC5B,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC7D;AAAA,EAEA,MAAM,WACJ,SACA,QACA,SACA,aAC6B;AAE7B,UAAM,SAAU,MAAM,KAAK;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,WAAW;AAAA,IACb;AAAA,EACF;AACF;","names":[]}