{"version":3,"sources":["../../src/extension/client.ts"],"sourcesContent":["import { Algo } from '@cosmjs/proto-signing';\nimport { SignType, WalletClient } from '@cosmos-kit/core';\n\nimport { Trust } from './types';\n\nexport class TrustClient implements WalletClient {\n  readonly client: Trust;\n\n  constructor(client: Trust) {\n    this.client = client;\n  }\n\n  async enable(chainIds: string | string[]) {\n    await this.client.enable(chainIds);\n  }\n\n  async getSimpleAccount(chainId: string) {\n    const { address, username } = await this.getAccount(chainId);\n    return {\n      namespace: 'cosmos',\n      chainId,\n      address,\n      username,\n    };\n  }\n\n  async getAccount(chainId: string) {\n    const key = await this.client.getKey(chainId);\n    return {\n      username: key.name,\n      address: key.bech32Address,\n      algo: key.algo as Algo,\n      pubkey: key.pubKey,\n    };\n  }\n\n  getOfflineSigner(chainId: string, preferredSignType?: SignType) {\n    // switch (preferredSignType) {\n    //   case 'amino':\n    //     return this.getOfflineSignerAmino(chainId);\n    //   case 'direct':\n    //     return this.getOfflineSignerDirect(chainId);\n    //   default:\n    //     return this.getOfflineSignerAmino(chainId);\n    // }\n    return this.client.getOfflineSigner(chainId);\n  }\n}\n"],"mappings":";AAKO,IAAM,cAAN,MAA0C;AAAA,EAG/C,YAAY,QAAe;AACzB,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,MAAM,OAAO,UAA6B;AACxC,UAAM,KAAK,OAAO,OAAO,QAAQ;AAAA,EACnC;AAAA,EAEA,MAAM,iBAAiB,SAAiB;AACtC,UAAM,EAAE,SAAS,SAAS,IAAI,MAAM,KAAK,WAAW,OAAO;AAC3D,WAAO;AAAA,MACL,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAM,WAAW,SAAiB;AAChC,UAAM,MAAM,MAAM,KAAK,OAAO,OAAO,OAAO;AAC5C,WAAO;AAAA,MACL,UAAU,IAAI;AAAA,MACd,SAAS,IAAI;AAAA,MACb,MAAM,IAAI;AAAA,MACV,QAAQ,IAAI;AAAA,IACd;AAAA,EACF;AAAA,EAEA,iBAAiB,SAAiB,mBAA8B;AAS9D,WAAO,KAAK,OAAO,iBAAiB,OAAO;AAAA,EAC7C;AACF;","names":[]}