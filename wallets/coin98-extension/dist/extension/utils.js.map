{"version":3,"sources":["../../src/extension/utils.ts"],"sourcesContent":["import { ClientNotExistError } from '@cosmos-kit/core';\nimport { Coin98 } from './types';\n// import { Keplr, Window as KeplrWindow } from '@keplr-wallet/types';\n\ninterface Coin98Window {\n  coin98?: {\n    keplr: Coin98\n  }\n}\n\nexport const getCoin98FromExtension: () => Promise<\n  Coin98 | undefined\n> = async () => {\n  if (typeof window === 'undefined') {\n    return void 0;\n  }\n\n  const provider = (window as Coin98Window).coin98?.keplr;\n\n  if (provider) {\n    return provider;\n  }\n\n  if (document.readyState === 'complete') {\n    if (provider) {\n      return provider;\n    } else {\n      throw ClientNotExistError;\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    const documentStateChange = (event: Event) => {\n      if (\n        event.target &&\n        (event.target as Document).readyState === 'complete'\n      ) {\n        if (provider) {\n          resolve(provider);\n        } else {\n          reject(ClientNotExistError.message);\n        }\n        document.removeEventListener('readystatechange', documentStateChange);\n      }\n    };\n\n    document.addEventListener('readystatechange', documentStateChange);\n  });\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoC;AAU7B,IAAM,yBAET,YAAY;AACd,MAAI,OAAO,WAAW,aAAa;AACjC,WAAO;AAAA,EACT;AAEA,QAAM,WAAY,OAAwB,QAAQ;AAElD,MAAI,UAAU;AACZ,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,eAAe,YAAY;AACtC,QAAI,UAAU;AACZ,aAAO;AAAA,IACT,OAAO;AACL,YAAM;AAAA,IACR;AAAA,EACF;AAEA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,sBAAsB,CAAC,UAAiB;AAC5C,UACE,MAAM,UACL,MAAM,OAAoB,eAAe,YAC1C;AACA,YAAI,UAAU;AACZ,kBAAQ,QAAQ;AAAA,QAClB,OAAO;AACL,iBAAO,gCAAoB,OAAO;AAAA,QACpC;AACA,iBAAS,oBAAoB,oBAAoB,mBAAmB;AAAA,MACtE;AAAA,IACF;AAEA,aAAS,iBAAiB,oBAAoB,mBAAmB;AAAA,EACnE,CAAC;AACH;","names":[]}