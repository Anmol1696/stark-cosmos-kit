{"version":3,"sources":["../../src/wallet-connect/client.ts"],"sourcesContent":["import { DirectSignDoc, SignOptions, Wallet } from '@cosmos-kit/core';\nimport { WCClient } from '@cosmos-kit/walletconnect';\nimport { AminoSignResponse, StdSignDoc } from '@cosmjs/amino';\nimport { DirectSignResponse } from '@cosmjs/proto-signing';\n\nexport class OmniClient extends WCClient {\n  constructor(walletInfo: Wallet) {\n    super(walletInfo);\n  }\n\n  async signAmino(\n    chainId: string,\n    signer: string,\n    signDoc: StdSignDoc,\n    signOptions?: SignOptions\n  ): Promise<AminoSignResponse> {\n    const { signDoc: signed, signature } = (await this._signAmino(\n      chainId,\n      signer,\n      signDoc,\n      signOptions\n    )) as any;\n    return {\n      signed,\n      signature,\n    };\n  }\n\n  async signDirect(\n    chainId: string,\n    signer: string,\n    signDoc: DirectSignDoc,\n    signOptions?: SignOptions\n  ): Promise<DirectSignResponse> {\n    const { signDoc: signed, signature } = (await this._signDirect(\n      chainId,\n      signer,\n      signDoc,\n      signOptions\n    )) as any;\n    return {\n      signed,\n      signature,\n    };\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,2BAAyB;AAIlB,IAAM,aAAN,cAAyB,8BAAS;AAAA,EACvC,YAAY,YAAoB;AAC9B,UAAM,UAAU;AAAA,EAClB;AAAA,EAEA,MAAM,UACJ,SACA,QACA,SACA,aAC4B;AAC5B,UAAM,EAAE,SAAS,QAAQ,UAAU,IAAK,MAAM,KAAK;AAAA,MACjD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAM,WACJ,SACA,QACA,SACA,aAC6B;AAC7B,UAAM,EAAE,SAAS,QAAQ,UAAU,IAAK,MAAM,KAAK;AAAA,MACjD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;","names":[]}