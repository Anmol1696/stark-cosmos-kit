{"version":3,"sources":["../../src/extension/main-wallet.ts","../../src/extension/chain-wallet.ts","../../src/extension/client.ts","../../src/extension/signer.ts"],"sourcesContent":["import { MainWalletBase, Wallet } from '@cosmos-kit/core';\n\nimport { Web3AuthChainWallet } from './chain-wallet';\nimport { Web3AuthClient } from './client';\n\nexport class Web3AuthWallet extends MainWalletBase {\n  constructor(walletInfo: Wallet) {\n    super(walletInfo, Web3AuthChainWallet);\n  }\n\n  async initClient() {\n    this.initingClient();\n    try {\n      this.initClientDone(new Web3AuthClient());\n    } catch (error) {\n      this.logger?.error(error);\n      this.initClientError(error);\n    }\n  }\n}\n","import { ChainRecord, ChainWalletBase, Wallet } from '@cosmos-kit/core';\n\nexport class Web3AuthChainWallet extends ChainWalletBase {\n  constructor(walletInfo: Wallet, chainInfo: ChainRecord) {\n    super(walletInfo, chainInfo);\n  }\n}\n","import { OfflineAminoSigner } from '@cosmjs/amino';\nimport { DirectSecp256k1Wallet } from '@cosmjs/proto-signing';\nimport { WalletClient } from '@cosmos-kit/core';\nimport { CHAIN_NAMESPACES } from '@web3auth/base';\nimport { Web3Auth } from '@web3auth/modal';\nimport { chains } from 'chain-registry';\n\nimport { Web3AuthCustomSigner } from './signer';\n\nexport class Web3AuthClient implements WalletClient {\n  readonly client: Web3Auth;\n\n  modalInitComplete = false;\n\n  // Map chainId to signer.\n  signers: Record<string, DirectSecp256k1Wallet | undefined> = {};\n\n  constructor() {\n    this.client = new Web3Auth({\n      // Get from developer dashboard.\n      clientId: 'randomlocalhost',\n      chainConfig: {\n        chainNamespace: CHAIN_NAMESPACES.OTHER,\n      },\n    });\n  }\n\n  async getPrivateKey(): Promise<Uint8Array> {\n    const privateKeyHex = await this.client.provider.request({\n      method: 'private_key',\n    });\n    if (typeof privateKeyHex !== 'string') {\n      throw new Error('Invalid private key');\n    }\n    return Uint8Array.from(Buffer.from(privateKeyHex, 'hex'));\n  }\n\n  async connect(_chainIds: string | string[]) {\n    // Only connect to chains that are not already connected.\n    const chainIds = [_chainIds]\n      .flat()\n      .filter((chainId) => !(chainId in this.signers));\n    if (chainIds.length === 0) {\n      return;\n    }\n\n    if (!this.modalInitComplete) {\n      await this.client.initModal();\n      this.modalInitComplete = true;\n    }\n\n    await this.client.connect();\n\n    // Get private key.\n    const privateKey = await this.getPrivateKey();\n\n    // TODO: Is there a better way to get the prefix for a chain ID. Retrieve\n    // from passed in chain info somehow?\n\n    // Get chain prefixes for IDs, erroring if any could not be found.\n    const chainPrefixes = chainIds.map((chainId): string => {\n      const chain = chains.find(({ chain_id }) => chain_id === chainId);\n      if (!chain) {\n        throw new Error(`Chain ID ${chainId} not found`);\n      }\n      return chain.bech32_prefix;\n    });\n\n    // Create signers for chains.\n    await Promise.all(\n      chainIds.map(async (chainId, index) => {\n        this.signers[chainId] = await DirectSecp256k1Wallet.fromKey(\n          privateKey,\n          chainPrefixes[index]\n        );\n      })\n    );\n  }\n\n  async disconnect() {\n    if (this.client.status === 'connected') {\n      await this.client.logout();\n    }\n    this.signers = {};\n  }\n\n  async getSimpleAccount(chainId: string) {\n    const { address, username } = await this.getAccount(chainId);\n    return {\n      namespace: 'cosmos',\n      chainId,\n      address,\n      username,\n    };\n  }\n\n  async getAccount(chainId: string) {\n    await this.connect(chainId);\n\n    const signer = this.signers[chainId];\n    if (!signer) {\n      throw new Error('Signer not enabled');\n    }\n\n    const info = await this.client.getUserInfo();\n\n    const account = (await signer.getAccounts())[0];\n\n    return {\n      username: info.name || info.email || account.address,\n      ...account,\n    };\n  }\n\n  getOfflineSigner(chainId: string) {\n    return this.getOfflineSignerDirect(chainId);\n  }\n\n  getOfflineSignerAmino(): OfflineAminoSigner {\n    throw new Error('Not implemented');\n  }\n\n  getOfflineSignerDirect(chainId: string) {\n    return new Web3AuthCustomSigner(this, chainId);\n  }\n}\n","import { wasmTypes } from '@cosmjs/cosmwasm-stargate/build/modules';\nimport {\n  AccountData,\n  DirectSecp256k1Wallet,\n  DirectSignResponse,\n  OfflineDirectSigner,\n} from '@cosmjs/proto-signing';\nimport { Registry } from '@cosmjs/proto-signing/build/registry';\nimport { defaultRegistryTypes } from '@cosmjs/stargate';\nimport { SignDoc, TxBody } from 'cosmjs-types/cosmos/tx/v1beta1/tx';\n\nimport { Web3AuthClient } from './client';\n\nconst registry = new Registry([...defaultRegistryTypes, ...wasmTypes]);\n\nexport class Web3AuthCustomSigner implements OfflineDirectSigner {\n  client: Web3AuthClient;\n  chainId: string;\n\n  constructor(client: Web3AuthClient, chainId: string) {\n    this.client = client;\n    this.chainId = chainId;\n  }\n\n  async getSigner(chainId: string): Promise<DirectSecp256k1Wallet> {\n    if (!this.client.signers[chainId]) {\n      await this.client.connect(chainId);\n    }\n\n    return this.client.signers[chainId];\n  }\n\n  async getAccounts(): Promise<readonly AccountData[]> {\n    return (await this.getSigner(this.chainId)).getAccounts();\n  }\n\n  async signDirect(\n    signerAddress: string,\n    signDoc: SignDoc\n  ): Promise<DirectSignResponse> {\n    if (signDoc.chainId !== this.chainId) {\n      throw new Error('Chain ID mismatch');\n    }\n\n    const signer = await this.getSigner(signDoc.chainId);\n\n    // TODO: Improve prompt UI.\n    const decodedMessages = TxBody.decode(signDoc.bodyBytes).messages.map(\n      (message) => ({\n        '@type': message.typeUrl,\n        ...registry.decode(message),\n      })\n    );\n\n    return new Promise((resolve, reject) => {\n      // Add modal to body.\n      const modal = document.createElement('div');\n      modal.id = 'web3auth-modal';\n      modal.style.position = 'fixed';\n      modal.style.top = '0';\n      modal.style.left = '0';\n      modal.style.width = '100%';\n      modal.style.height = '100%';\n      modal.style.zIndex = '999999';\n      modal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';\n      modal.style.display = 'flex';\n      modal.style.justifyContent = 'center';\n      modal.style.alignItems = 'center';\n      document.body.appendChild(modal);\n\n      // Add modal content.\n      const modalContent = document.createElement('div');\n      modalContent.style.backgroundColor = '#fff';\n      modalContent.style.padding = '1rem';\n      modalContent.style.borderRadius = '0.5rem';\n      modalContent.style.maxWidth = '50rem';\n      modalContent.style.width = '100%';\n      modalContent.style.maxHeight = '50rem';\n      modalContent.style.overflow = 'auto';\n      modal.appendChild(modalContent);\n\n      // Add modal title.\n      const modalTitle = document.createElement('h2');\n      modalTitle.innerText = 'Web3Auth';\n      modalTitle.style.margin = '0';\n      modalTitle.style.padding = '0';\n      modalTitle.style.fontSize = '1.5rem';\n      modalTitle.style.fontWeight = 'bold';\n      modalContent.appendChild(modalTitle);\n\n      // Add modal description.\n      const modalDescription = document.createElement('p');\n      modalDescription.innerText = 'Sign transaction?';\n      modalDescription.style.margin = '0';\n      modalDescription.style.padding = '0';\n      modalDescription.style.fontSize = '1rem';\n      modalDescription.style.fontWeight = 'normal';\n      modalContent.appendChild(modalDescription);\n\n      // Add modal JSON.\n      const modalJson = document.createElement('pre');\n      modalJson.innerText = JSON.stringify(decodedMessages, null, 2);\n      modalJson.style.margin = '0';\n      modalJson.style.padding = '0';\n      modalJson.style.fontSize = '1rem';\n      modalJson.style.fontWeight = 'normal';\n      modalContent.appendChild(modalJson);\n\n      // Add modal buttons.\n      const modalButtons = document.createElement('div');\n      modalButtons.style.margin = '0';\n      modalButtons.style.padding = '0';\n      modalButtons.style.display = 'flex';\n      modalButtons.style.justifyContent = 'flex-end';\n      modalContent.appendChild(modalButtons);\n\n      // Add modal cancel button.\n      const modalCancelButton = document.createElement('button');\n      modalCancelButton.innerText = 'Cancel';\n      modalCancelButton.style.margin = '0';\n      modalCancelButton.style.padding = '0.5rem 1rem';\n      modalCancelButton.style.fontSize = '1rem';\n      modalCancelButton.style.fontWeight = 'bold';\n      modalCancelButton.style.backgroundColor = '#fff';\n      modalCancelButton.style.border = '1px solid #000';\n      modalCancelButton.style.borderRadius = '0.25rem';\n      modalCancelButton.style.cursor = 'pointer';\n      modalCancelButton.onclick = () => {\n        const modal = document.getElementById('web3auth-modal');\n        if (modal) {\n          modal.remove();\n        }\n        reject(new Error('Request rejected'));\n      };\n      modalButtons.appendChild(modalCancelButton);\n\n      // Add modal confirm button.\n      const modalConfirmButton = document.createElement('button');\n      modalConfirmButton.innerText = 'Confirm';\n      modalConfirmButton.style.margin = '0 0 0 0.5rem';\n      modalConfirmButton.style.padding = '0.5rem 1rem';\n      modalConfirmButton.style.fontSize = '1rem';\n      modalConfirmButton.style.fontWeight = 'bold';\n      modalConfirmButton.style.backgroundColor = '#000';\n      modalConfirmButton.style.color = '#fff';\n      modalConfirmButton.style.border = '1px solid #000';\n      modalConfirmButton.style.borderRadius = '0.25rem';\n      modalConfirmButton.style.cursor = 'pointer';\n      modalConfirmButton.onclick = () => {\n        const modal = document.getElementById('web3auth-modal');\n        if (modal) {\n          modal.remove();\n        }\n        signer.signDirect(signerAddress, signDoc).then(resolve).catch(reject);\n      };\n      modalButtons.appendChild(modalConfirmButton);\n    });\n  }\n}\n"],"mappings":"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","names":["import_core","modal"]}