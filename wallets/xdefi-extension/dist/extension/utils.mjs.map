{"version":3,"sources":["../../src/extension/utils.ts"],"sourcesContent":["import { ClientNotExistError } from '@cosmos-kit/core';\n\nimport { XDEFI } from './types';\n\ninterface XDEFIWindow {\n  xfi?: {\n    keplr?: XDEFI;\n  };\n}\n\nexport const getXDEFIFromExtension: () => Promise<\n  XDEFI | undefined\n> = async () => {\n  if (typeof window === 'undefined') {\n    return void 0;\n  }\n\n  const xdefi = (window as XDEFIWindow)?.xfi?.keplr;\n\n  if (xdefi && !xdefi.isXDEFI) {\n    throw ClientNotExistError;\n  }\n\n  if (xdefi) {\n    return xdefi;\n  }\n\n  if (document.readyState === 'complete') {\n    if (xdefi) {\n      return xdefi;\n    } else {\n      throw ClientNotExistError;\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    const documentStateChange = (event: Event) => {\n      if (\n        event.target &&\n        (event.target as Document).readyState === 'complete'\n      ) {\n        if (xdefi) {\n          resolve(xdefi);\n        } else {\n          reject(ClientNotExistError.message);\n        }\n        document.removeEventListener('readystatechange', documentStateChange);\n      }\n    };\n\n    document.addEventListener('readystatechange', documentStateChange);\n  });\n};\n"],"mappings":";AAAA,SAAS,2BAA2B;AAU7B,IAAM,wBAET,YAAY;AACd,MAAI,OAAO,WAAW,aAAa;AACjC,WAAO;AAAA,EACT;AAEA,QAAM,QAAS,QAAwB,KAAK;AAE5C,MAAI,SAAS,CAAC,MAAM,SAAS;AAC3B,UAAM;AAAA,EACR;AAEA,MAAI,OAAO;AACT,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,eAAe,YAAY;AACtC,QAAI,OAAO;AACT,aAAO;AAAA,IACT,OAAO;AACL,YAAM;AAAA,IACR;AAAA,EACF;AAEA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,sBAAsB,CAAC,UAAiB;AAC5C,UACE,MAAM,UACL,MAAM,OAAoB,eAAe,YAC1C;AACA,YAAI,OAAO;AACT,kBAAQ,KAAK;AAAA,QACf,OAAO;AACL,iBAAO,oBAAoB,OAAO;AAAA,QACpC;AACA,iBAAS,oBAAoB,oBAAoB,mBAAmB;AAAA,MACtE;AAAA,IACF;AAEA,aAAS,iBAAiB,oBAAoB,mBAAmB;AAAA,EACnE,CAAC;AACH;","names":[]}