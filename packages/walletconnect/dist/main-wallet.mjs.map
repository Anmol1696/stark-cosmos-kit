{"version":3,"sources":["../src/main-wallet.ts"],"sourcesContent":["import { Mutable, State, Wallet, WalletConnectOptions } from '@cosmos-kit/core';\nimport { MainWalletBase } from '@cosmos-kit/core';\nimport { WCClient } from './client';\n\nimport { IChainWC, IWCClient } from './types';\n\nexport class WCWallet extends MainWalletBase {\n  WCClient: IWCClient;\n  clientMutable: Mutable<WCClient> = { state: State.Init };\n\n  constructor(walletInfo: Wallet, ChainWC: IChainWC, WCClient: IWCClient) {\n    if (!walletInfo.walletconnect) {\n      throw new Error(\n        `'walletconnect' info for wallet ${walletInfo.prettyName} is not provided in wallet registry.`\n      );\n    }\n    super(walletInfo, ChainWC);\n    this.WCClient = WCClient;\n  }\n\n  async initClient(options?: WalletConnectOptions) {\n    if (!options) {\n      this.initClientError(\n        new Error('`walletconnectOptions` is not provided.')\n      );\n      return;\n    }\n\n    if (!options.signClient.projectId) {\n      this.initClientError(\n        new Error('`projectId` is not provided in `walletconnectOptions`.')\n      );\n      return;\n    }\n\n    this.initingClient();\n\n    try {\n      const client = new this.WCClient(this.walletInfo);\n      client.logger = this.logger;\n      client.emitter = this.emitter;\n      client.env = this.env;\n      client.options = options;\n      await client.init();\n\n      this.initClientDone(client);\n    } catch (error) {\n      this.logger?.error(error);\n      this.initClientError(error);\n    }\n  }\n}\n"],"mappings":";AAAA,SAAkB,aAA2C;AAC7D,SAAS,sBAAsB;AAKxB,IAAM,WAAN,cAAuB,eAAe;AAAA,EAI3C,YAAY,YAAoB,SAAmB,UAAqB;AACtE,QAAI,CAAC,WAAW,eAAe;AAC7B,YAAM,IAAI;AAAA,QACR,mCAAmC,WAAW;AAAA,MAChD;AAAA,IACF;AACA,UAAM,YAAY,OAAO;AAR3B,yBAAmC,EAAE,OAAO,MAAM,KAAK;AASrD,SAAK,WAAW;AAAA,EAClB;AAAA,EAEA,MAAM,WAAW,SAAgC;AAC/C,QAAI,CAAC,SAAS;AACZ,WAAK;AAAA,QACH,IAAI,MAAM,yCAAyC;AAAA,MACrD;AACA;AAAA,IACF;AAEA,QAAI,CAAC,QAAQ,WAAW,WAAW;AACjC,WAAK;AAAA,QACH,IAAI,MAAM,wDAAwD;AAAA,MACpE;AACA;AAAA,IACF;AAEA,SAAK,cAAc;AAEnB,QAAI;AACF,YAAM,SAAS,IAAI,KAAK,SAAS,KAAK,UAAU;AAChD,aAAO,SAAS,KAAK;AACrB,aAAO,UAAU,KAAK;AACtB,aAAO,MAAM,KAAK;AAClB,aAAO,UAAU;AACjB,YAAM,OAAO,KAAK;AAElB,WAAK,eAAe,MAAM;AAAA,IAC5B,SAAS,OAAP;AACA,WAAK,QAAQ,MAAM,KAAK;AACxB,WAAK,gBAAgB,KAAK;AAAA,IAC5B;AAAA,EACF;AACF;","names":[]}