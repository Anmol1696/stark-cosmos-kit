{"version":3,"sources":["../../../node_modules/long/src/long.js","../src/client.ts","../src/utils/core.ts"],"sourcesContent":["module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","import {\n  AminoSignResponse,\n  OfflineAminoSigner,\n  StdSignDoc,\n} from '@cosmjs/amino';\nimport {\n  Algo,\n  DirectSignResponse,\n  OfflineDirectSigner,\n} from '@cosmjs/proto-signing';\nimport {\n  AppUrl,\n  DappEnv,\n  DirectSignDoc,\n  ExpiredError,\n  Logger,\n  Mutable,\n  RejectedError,\n  SignOptions,\n  SignType,\n  SimpleAccount,\n  State,\n  Wallet,\n  WalletAccount,\n  WalletClient,\n  WalletClientActions,\n  WalletConnectOptions,\n} from '@cosmos-kit/core';\nimport SignClient from '@walletconnect/sign-client';\nimport { PairingTypes, SessionTypes } from '@walletconnect/types';\nimport { getSdkError } from '@walletconnect/utils';\nimport EventEmitter from 'events';\nimport Long from 'long';\n\nimport { WCAccount, WCSignDirectRequest, WCSignDirectResponse } from './types';\nimport { CoreUtil } from './utils';\n\nconst EXPLORER_API = 'https://explorer-api.walletconnect.com';\n\nexport class WCClient implements WalletClient {\n  readonly walletInfo: Wallet;\n\n  signClient?: SignClient;\n  wcCloudInfo?: any; // info from WalletConnect Cloud Explorer\n  actions?: WalletClientActions;\n  qrUrl: Mutable<string>;\n  appUrl: Mutable<AppUrl>;\n\n  pairings: PairingTypes.Struct[] = [];\n  sessions: SessionTypes.Struct[] = [];\n  emitter?: EventEmitter;\n  logger?: Logger;\n  options?: WalletConnectOptions;\n  relayUrl?: string;\n  env?: DappEnv;\n\n  constructor(walletInfo: Wallet) {\n    if (!walletInfo.walletconnect) {\n      throw new Error(\n        `'walletconnect' info for wallet ${walletInfo.prettyName} is not provided in wallet registry.`\n      );\n    }\n    this.walletInfo = walletInfo;\n\n    this.qrUrl = { state: State.Init };\n    this.appUrl = { state: State.Init };\n  }\n\n  get isMobile() {\n    return this.env?.device === 'mobile';\n  }\n\n  // walletconnect wallet name\n  get wcName(): string {\n    return this.walletInfo.walletconnect.name;\n  }\n\n  // wallet defined bytes encoding\n  get wcEncoding(): BufferEncoding {\n    return this.walletInfo.walletconnect.encoding || 'hex';\n  }\n\n  // walletconnect wallet project id\n  get wcProjectId(): string {\n    return this.walletInfo.walletconnect.projectId;\n  }\n\n  // walletconnect wallet mobile link\n  get wcMobile() {\n    return this.walletInfo.walletconnect.mobile;\n  }\n\n  get accounts(): SimpleAccount[] {\n    const accounts = [];\n    this.sessions.forEach((s) => {\n      Object.entries(s.namespaces).forEach(([, nsValue]) => {\n        nsValue.accounts.forEach((account) => {\n          const [namespace, chainId, address] = account.split(':');\n          accounts.push({\n            namespace,\n            chainId,\n            address,\n          });\n        });\n      });\n    });\n    return accounts;\n  }\n\n  deleteSession(topic: string) {\n    const chainIds = [];\n    this.sessions = this.sessions.filter((s) => {\n      if (s.topic === topic) {\n        s.namespaces.cosmos.accounts.forEach((account) => {\n          const [, chainId] = account.split(':');\n          chainIds.push(chainId);\n        });\n        return false;\n      } else {\n        return true;\n      }\n    });\n    this.emitter?.emit('reset', chainIds);\n    this.logger?.debug('[WALLET EVENT] Emit `reset`');\n  }\n\n  subscribeToEvents() {\n    if (typeof this.signClient === 'undefined') {\n      throw new Error('WalletConnect is not initialized');\n    }\n\n    this.signClient.on('session_ping', (args) => {\n      this.logger?.debug('EVENT', 'session_ping', args);\n    });\n\n    this.signClient.on('session_event', async (args) => {\n      this.logger?.debug('EVENT', 'session_event', args);\n      // const {\n      //   topic,\n      //   params: { event, chainId },\n      // } = args;\n      // if (this.session?.topic != topic) return;\n      // if (event.name === 'accountsChanged') {\n      //   await this.connect(\n      //     this.accounts.map(([, chainId]) => chainId),\n      //     false\n      //   );\n      // }\n    });\n\n    this.signClient.on('session_update', ({ topic, params }) => {\n      this.logger?.debug('EVENT', 'session_update', { topic, params });\n      // if (this.session?.topic != topic) return;\n\n      // const { namespaces } = params;\n      // const _session = this.signClient.session.get(topic);\n      // this.session = { ..._session, namespaces };\n    });\n\n    this.signClient.on('session_delete', (args) => {\n      this.logger?.debug('EVENT', 'session_delete', args);\n      this.deleteSession(args.topic);\n    });\n\n    this.signClient.on('session_expire', (args) => {\n      this.logger?.debug('EVENT', 'session_expire', args);\n      this.deleteSession(args.topic);\n    });\n\n    this.signClient.on('session_proposal', (args) => {\n      this.logger?.debug('EVENT', 'session_proposal', args);\n    });\n\n    this.signClient.on('session_request', (args) => {\n      this.logger?.debug('EVENT', 'session_request', args);\n    });\n\n    this.signClient.on('proposal_expire', (args) => {\n      this.logger?.debug('EVENT', 'proposal_expire', args);\n    });\n  }\n\n  async deleteInactivePairings() {\n    if (typeof this.signClient === 'undefined') {\n      throw new Error('WalletConnect is not initialized');\n    }\n\n    for (const pairing of this.signClient.pairing.getAll({ active: false })) {\n      await this.signClient.pairing.delete(pairing.topic, {\n        code: 7001,\n        message: 'Clear inactive pairings.',\n      });\n      this.logger?.debug('Delete inactive pairing:', pairing.topic);\n    }\n  }\n\n  restorePairings() {\n    if (typeof this.signClient === 'undefined') {\n      throw new Error('WalletConnect is not initialized');\n    }\n    this.pairings = this.signClient.pairing\n      .getAll({ active: true })\n      .filter(\n        (p) =>\n          p.peerMetadata?.name === this.wcName &&\n          p.expiry * 1000 > Date.now() + 1000\n      );\n    this.logger?.debug('RESTORED PAIRINGS: ', this.pairings);\n  }\n\n  get pairing(): PairingTypes.Struct | undefined {\n    return this.pairings[0];\n  }\n\n  restoreSessions() {\n    if (typeof this.signClient === 'undefined') {\n      throw new Error('WalletConnect is not initialized');\n    }\n    this.sessions = this.signClient.session\n      .getAll()\n      .filter(\n        (s) =>\n          s.peer.metadata.name === this.wcName &&\n          s.expiry * 1000 > Date.now() + 1000\n      );\n    this.logger?.debug('RESTORED SESSIONS: ', this.sessions);\n  }\n\n  getSession(namespace: string, chainId: string) {\n    return this.sessions.find((s) =>\n      s.namespaces[namespace]?.accounts?.find((account) =>\n        account.startsWith(`${namespace}:${chainId}`)\n      )\n    );\n  }\n\n  get walletName() {\n    return this.walletInfo.name;\n  }\n\n  get dappProjectId() {\n    return this.options?.signClient.projectId;\n  }\n\n  setActions(actions: WalletClientActions) {\n    this.actions = actions;\n  }\n\n  setQRState(state: State) {\n    this.qrUrl.state = state;\n    this.actions?.qrUrl?.state(state);\n  }\n\n  setQRError(e?: Error | string) {\n    this.setQRState(State.Error);\n    this.qrUrl.message = typeof e === 'string' ? e : e?.message;\n    this.actions?.qrUrl?.message?.(this.qrUrl.message);\n    if (typeof e !== 'string' && e?.stack) {\n      this.logger?.error(e.stack);\n    }\n  }\n\n  async init() {\n    await this.initSignClient();\n    if (this.isMobile) {\n      await this.initAppUrl();\n    }\n  }\n\n  async initSignClient() {\n    if (\n      this.signClient &&\n      this.relayUrl === this.options?.signClient.relayUrl\n    ) {\n      return;\n    }\n\n    this.signClient = await SignClient.init(this.options?.signClient);\n    this.relayUrl = this.options?.signClient.relayUrl;\n\n    this.logger?.debug('CREATED CLIENT: ', this.signClient);\n    this.logger?.debug('relayerRegion ', this.options?.signClient.relayUrl);\n\n    this.subscribeToEvents();\n    this.restorePairings();\n    this.restoreSessions();\n  }\n\n  async initWCCloudInfo() {\n    const fetcUrl = `${EXPLORER_API}/v3/wallets?projectId=${this.dappProjectId}&sdks=sign_v2&search=${this.wcName}`;\n    const fetched = await (await fetch(fetcUrl)).json();\n    this.wcCloudInfo =\n      fetched.listings[this.walletInfo.walletconnect?.projectId!];\n    this.logger?.debug('WalletConnect Info:', this.wcCloudInfo);\n  }\n\n  async initAppUrl() {\n    this.appUrl.state = State.Pending;\n\n    if (!this.wcCloudInfo) await this.initWCCloudInfo();\n\n    const native = this.wcCloudInfo.mobile.native || this.wcMobile?.native;\n    const universal =\n      this.wcCloudInfo.mobile.universal || this.wcMobile?.universal;\n\n    this.appUrl.data = { native, universal };\n    this.appUrl.state = State.Done;\n  }\n\n  get nativeUrl() {\n    const native = this.appUrl.data?.native;\n    if (typeof native === 'string' || typeof native === 'undefined') {\n      return native;\n    } else {\n      const { android, ios, macos, windows } = native;\n      switch (this.env?.os) {\n        case 'android':\n          return android;\n        case 'ios':\n          return ios;\n        case 'macos':\n          return macos;\n        case 'windows':\n          return windows;\n        default:\n          throw new Error(`Unknown os: ${this.env?.os}.`);\n      }\n    }\n  }\n\n  get universalUrl() {\n    return this.appUrl.data?.universal;\n  }\n\n  get redirectHref(): string | undefined {\n    return this.nativeUrl || this.universalUrl;\n  }\n\n  get redirectHrefWithWCUri(): string | undefined {\n    let href: string | undefined;\n    if (this.nativeUrl) {\n      href = (\n        this.walletInfo.walletconnect.formatNativeUrl ||\n        CoreUtil.formatNativeUrl\n      )(this.nativeUrl, this.qrUrl.data, this.env?.os, this.walletName);\n    } else if (this.universalUrl) {\n      href = (\n        this.walletInfo.walletconnect.formatUniversalUrl ||\n        CoreUtil.formatUniversalUrl\n      )(this.universalUrl, this.qrUrl.data, this.walletName);\n    }\n    return href;\n  }\n\n  get displayQRCode() {\n    if (this.pairing || this.redirect) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  get redirect() {\n    return Boolean(this.isMobile && (this.nativeUrl || this.universalUrl));\n  }\n\n  openApp(withWCUri = true) {\n    const href = withWCUri ? this.redirectHrefWithWCUri : this.redirectHref;\n    if (href) {\n      this.logger?.debug('Redirecting:', href);\n      CoreUtil.openHref(href);\n    } else {\n      this.logger?.error('No redirecting href.');\n    }\n  }\n\n  async connect(chainIds: string | string[]) {\n    if (typeof this.signClient === 'undefined') {\n      throw new Error('WalletConnect is not initialized');\n    }\n\n    if (this.qrUrl.state !== 'Init') {\n      this.setQRState(State.Init);\n    }\n\n    const chainIdsWithNS =\n      typeof chainIds === 'string'\n        ? [`cosmos:${chainIds}`]\n        : chainIds.map((chainId) => `cosmos:${chainId}`);\n\n    this.restorePairings();\n    const pairing = this.pairing;\n    this.logger?.debug('Restored active pairing topic is:', pairing?.topic);\n\n    if (this.displayQRCode) this.setQRState(State.Pending);\n\n    const requiredNamespaces = {\n      cosmos: {\n        methods: [\n          'cosmos_getAccounts',\n          'cosmos_signAmino',\n          'cosmos_signDirect',\n        ],\n        chains: chainIdsWithNS,\n        events: ['chainChanged', 'accountsChanged'],\n      },\n    };\n    let connectResp: any;\n    try {\n      this.logger?.debug('Connecting chains:', chainIdsWithNS);\n      connectResp = await this.signClient.connect({\n        pairingTopic: pairing?.topic,\n        requiredNamespaces,\n      });\n\n      // https://github.com/cosmology-tech/projects-issues/issues/349\n      // Commented out because of the issue above.\n      // if (typeof connectResp.uri === 'undefined') {\n      //   throw new Error('Failed to generate WalletConnect URI!');\n      // }\n\n      this.qrUrl.data = connectResp.uri;\n      this.logger?.debug('Using QR URI:', connectResp.uri);\n      if (this.displayQRCode) this.setQRState(State.Done);\n    } catch (error) {\n      this.logger?.error('Client connect error: ', error);\n      if (this.displayQRCode) this.setQRError(error);\n      return;\n    }\n\n    if (this.redirect) this.openApp();\n\n    try {\n      const session = await connectResp.approval();\n      this.logger?.debug('Established session:', session);\n      this.sessions.push(session);\n      this.restorePairings();\n    } catch (error) {\n      this.logger?.error('Session approval error: ', error);\n      await this.deleteInactivePairings();\n      if (!error) {\n        if (this.displayQRCode) this.setQRError(ExpiredError);\n        throw new Error('Proposal Expired');\n      } else if (error.code == 5001) {\n        throw RejectedError;\n      } else {\n        throw error;\n      }\n    } finally {\n      if (!pairing && this.qrUrl.message !== ExpiredError.message) {\n        this.setQRState(State.Init);\n      }\n    }\n  }\n\n  async disconnect() {\n    if (typeof this.signClient === 'undefined') {\n      throw new Error('WalletConnect is not initialized');\n    }\n    if (this.sessions.length === 0) {\n      return;\n    }\n\n    for (const session of this.sessions) {\n      try {\n        this.logger?.debug('Delete session:', session);\n        await this.signClient.disconnect({\n          topic: session.topic,\n          reason: getSdkError('USER_DISCONNECTED'),\n        });\n      } catch (error) {\n        this.logger?.error(\n          `SignClient.disconnect session ${session.topic} failed:`,\n          error\n        );\n      }\n    }\n    this.sessions = [];\n    this.emitter?.emit('sync_disconnect');\n    this.logger?.debug('[WALLET EVENT] Emit `sync_disconnect`');\n  }\n\n  async getSimpleAccount(chainId: string): Promise<SimpleAccount> {\n    const account = this.accounts.find(({ chainId: id }) => id === chainId);\n    if (!account) {\n      throw new Error(\n        `Chain ${chainId} is not connected yet, please check the session approval namespaces`\n      );\n    }\n    return account;\n  }\n\n  getOfflineSignerAmino(chainId: string) {\n    return {\n      getAccounts: async () => [await this.getAccount(chainId)],\n      signAmino: (signerAddress: string, signDoc: StdSignDoc) =>\n        this.signAmino(chainId, signerAddress, signDoc),\n    } as OfflineAminoSigner;\n  }\n\n  getOfflineSignerDirect(chainId: string) {\n    return {\n      getAccounts: async () => [await this.getAccount(chainId)],\n      signDirect: (signerAddress: string, signDoc: DirectSignDoc) =>\n        this.signDirect(chainId, signerAddress, signDoc),\n    } as OfflineDirectSigner;\n  }\n\n  async getOfflineSigner(chainId: string, preferredSignType?: SignType) {\n    if (preferredSignType === 'amino' && this.getOfflineSignerAmino) {\n      return this.getOfflineSignerAmino(chainId);\n    }\n    if (preferredSignType === 'direct' && this.getOfflineSignerDirect) {\n      return this.getOfflineSignerDirect(chainId);\n    }\n    return this.getOfflineSignerAmino\n      ? this.getOfflineSignerAmino?.(chainId)\n      : this.getOfflineSignerDirect(chainId);\n  }\n\n  protected async _getAccount(chainId: string) {\n    const session = this.getSession('cosmos', chainId);\n    if (!session) {\n      throw new Error(`Session for ${chainId} not established yet.`);\n    }\n    const resp = await this.signClient.request({\n      topic: session.topic,\n      chainId: `cosmos:${chainId}`,\n      request: {\n        method: 'cosmos_getAccounts',\n        params: {},\n      },\n    });\n    this.logger?.debug(`Response of cosmos_getAccounts`, resp);\n    return resp;\n  }\n\n  async getAccount(chainId: string): Promise<WalletAccount> {\n    const { address, algo, pubkey } = (\n      await this._getAccount(chainId)\n    )[0] as WCAccount;\n    return {\n      address,\n      algo: algo as Algo,\n      pubkey: new Uint8Array(Buffer.from(pubkey, this.wcEncoding)),\n    };\n  }\n\n  protected async _signAmino(\n    chainId: string,\n    signer: string,\n    signDoc: StdSignDoc,\n    signOptions?: SignOptions\n  ) {\n    const session = this.getSession('cosmos', chainId);\n    if (!session) {\n      throw new Error(`Session for ${chainId} not established yet.`);\n    }\n\n    if (this.redirect) this.openApp();\n\n    const resp = await this.signClient.request({\n      topic: session.topic,\n      chainId: `cosmos:${chainId}`,\n      request: {\n        method: 'cosmos_signAmino',\n        params: {\n          signerAddress: signer,\n          signDoc,\n        },\n      },\n    });\n    this.logger?.debug(`Response of cosmos_signAmino`, resp);\n    return resp;\n  }\n\n  async signAmino(\n    chainId: string,\n    signer: string,\n    signDoc: StdSignDoc,\n    signOptions?: SignOptions\n  ): Promise<AminoSignResponse> {\n    const result = (await this._signAmino(\n      chainId,\n      signer,\n      signDoc,\n      signOptions\n    )) as AminoSignResponse;\n    return result;\n  }\n\n  protected async _signDirect(\n    chainId: string,\n    signer: string,\n    signDoc: DirectSignDoc,\n    signOptions?: SignOptions\n  ) {\n    const session = this.getSession('cosmos', chainId);\n    if (!session) {\n      throw new Error(`Session for ${chainId} not established yet.`);\n    }\n    const signDocValue: WCSignDirectRequest = {\n      signerAddress: signer,\n      signDoc: {\n        chainId: signDoc.chainId,\n        bodyBytes: Buffer.from(signDoc.bodyBytes).toString(this.wcEncoding),\n        authInfoBytes: Buffer.from(signDoc.authInfoBytes).toString(\n          this.wcEncoding\n        ),\n        accountNumber: signDoc.accountNumber.toString(),\n      },\n    };\n\n    if (this.redirect) this.openApp();\n\n    const resp = await this.signClient.request({\n      topic: session.topic,\n      chainId: `cosmos:${chainId}`,\n      request: {\n        method: 'cosmos_signDirect',\n        params: signDocValue,\n      },\n    });\n    this.logger?.debug(`Response of cosmos_signDirect`, resp);\n    return resp;\n  }\n\n  async signDirect(\n    chainId: string,\n    signer: string,\n    signDoc: DirectSignDoc,\n    signOptions?: SignOptions\n  ): Promise<DirectSignResponse> {\n    const { signed, signature } = (await this._signDirect(\n      chainId,\n      signer,\n      signDoc,\n      signOptions\n    )) as WCSignDirectResponse;\n    return {\n      signed: {\n        chainId: signed.chainId,\n        accountNumber: Long.fromString(signed.accountNumber, false),\n        authInfoBytes: new Uint8Array(\n          Buffer.from(signed.authInfoBytes, this.wcEncoding)\n        ),\n        bodyBytes: new Uint8Array(\n          Buffer.from(signed.bodyBytes, this.wcEncoding)\n        ),\n      },\n      signature,\n    };\n  }\n\n  // restoreLatestSession() {\n  //   if (typeof this.signClient === 'undefined') {\n  //     throw new Error('WalletConnect is not initialized');\n  //   }\n  //   if (typeof this.session !== 'undefined') return;\n\n  //   const targetKey = this.signClient.session.keys.reverse().find((key) => {\n  //     const session = this.signClient.session.get(key);\n  //     return (\n  //       session.peer.metadata.name === this.walletWCName &&\n  //       session.expiry * 1000 > Date.now() + 1000\n  //     );\n  //   });\n\n  //   if (targetKey) {\n  //     this.session = this.signClient.session.get(targetKey);\n  //     this.logger?.debug('RESTORED LATEST SESSION:', this.session);\n  //   }\n  // }\n}\n","import { OS } from '@cosmos-kit/core';\n\nconst WALLETCONNECT_DEEPLINK_CHOICE = 'WALLETCONNECT_DEEPLINK_CHOICE';\n\nexport const CoreUtil = {\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://');\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, os: OS, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name);\n    }\n    const plainAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '');\n    CoreUtil.setWalletConnectDeepLink(plainAppUrl, name);\n    const encodedWcUrl = encodeURIComponent(wcUri);\n\n    return `${plainAppUrl}://wc?uri=${encodedWcUrl}`;\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name);\n    }\n    let plainAppUrl = appUrl;\n    if (appUrl.endsWith('/')) {\n      plainAppUrl = appUrl.slice(0, -1);\n    }\n    CoreUtil.setWalletConnectDeepLink(plainAppUrl, name);\n    const encodedWcUrl = encodeURIComponent(wcUri);\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`;\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise((resolve) => {\n      setTimeout(resolve, miliseconds);\n    });\n  },\n\n  openHref(href: string, target = '_self') {\n    window.open(href, target, 'noreferrer noopener');\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(\n      WALLETCONNECT_DEEPLINK_CHOICE,\n      JSON.stringify({ href, name })\n    );\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(WALLETCONNECT_DEEPLINK_CHOICE);\n  },\n};\n"],"mappings":"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","names":["module","Long","SignClient","Long"]}