{"version":3,"sources":["../../src/types/view.ts"],"sourcesContent":["import { ChainWalletBase } from '../bases';\nimport { WalletRepo } from '../repository';\nimport { Dispatch } from './common';\n\nexport enum ModalView {\n  WalletList = 'WalletList',\n  Connecting = 'Connecting',\n  Connected = 'Connected',\n  Error = 'Error',\n  NotExist = 'NotExist',\n  Rejected = 'Rejected',\n  QRCode = 'QRCode',\n}\n\nexport interface WalletModalProps {\n  isOpen: boolean;\n  setOpen: Dispatch<boolean>;\n  walletRepo?: WalletRepo;\n}\n\nexport interface WalletViewProps {\n  onClose: () => void;\n  onReturn: () => void;\n  wallet: ChainWalletBase;\n}\n\ninterface RefObject<T> {\n  readonly current: T | null;\n}\n\nexport interface WalletListViewProps {\n  onClose: () => void;\n  wallets: ChainWalletBase[];\n  initialFocus?: RefObject<HTMLButtonElement>;\n}\n\ntype SingleWalletView = `${Exclude<ModalView, ModalView.WalletList>}`;\n\nexport type ModalViews = {\n  [p in SingleWalletView]?: (props: WalletViewProps) => JSX.Element;\n} & {\n  WalletList?: (props: WalletListViewProps) => JSX.Element;\n};\n"],"mappings":";AAIO,IAAK,YAAL,kBAAKA,eAAL;AACL,EAAAA,WAAA,gBAAa;AACb,EAAAA,WAAA,gBAAa;AACb,EAAAA,WAAA,eAAY;AACZ,EAAAA,WAAA,WAAQ;AACR,EAAAA,WAAA,cAAW;AACX,EAAAA,WAAA,cAAW;AACX,EAAAA,WAAA,YAAS;AAPC,SAAAA;AAAA,GAAA;","names":["ModalView"]}