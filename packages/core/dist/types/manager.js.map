{"version":3,"sources":["../../src/types/manager.ts"],"sourcesContent":["import { Chain } from '@chain-registry/types';\nimport {\n  HttpEndpoint,\n  SigningCosmWasmClientOptions,\n} from '@cosmjs/cosmwasm-stargate';\nimport {\n  SigningStargateClientOptions,\n  StargateClientOptions,\n} from '@cosmjs/stargate';\n\nimport { ChainName } from './chain';\nimport { Dispatch, SignType, StateActions } from './common';\nimport { WalletName } from './wallet';\n\nexport interface SignerOptions {\n  stargate?: (chain: Chain) => StargateClientOptions | undefined;\n  signingStargate?: (chain: Chain) => SigningStargateClientOptions | undefined;\n  signingCosmwasm?: (chain: Chain) => SigningCosmWasmClientOptions | undefined;\n  preferredSignType?: (chain: Chain) => SignType | undefined; // using `amino` if undefined\n}\n\nexport interface ViewOptions {\n  alwaysOpenView?: boolean;\n  closeViewWhenWalletIsConnected?: boolean;\n  closeViewWhenWalletIsDisconnected?: boolean;\n  closeViewWhenWalletIsRejected?: boolean;\n}\n\nexport interface StorageOptions {\n  disabled?: boolean;\n  /**\n   * Duration in ms.\n   */\n  duration?: number;\n  clearOnTabClose?: boolean;\n}\n\nexport interface SessionOptions {\n  /**\n   * Duration in ms.\n   */\n  duration: number;\n  callback?: () => void;\n}\n\nexport interface ExtendedHttpEndpoint extends HttpEndpoint {\n  isLazy?: boolean;\n}\n\nexport interface Endpoints {\n  rpc?: (string | ExtendedHttpEndpoint)[];\n  rest?: (string | ExtendedHttpEndpoint)[];\n  isLazy?: boolean;\n}\n\nexport interface EndpointOptions {\n  isLazy?: boolean;\n  endpoints?: Record<ChainName, Endpoints>;\n}\n\nexport interface ManagerActions<T> extends StateActions<T> {\n  walletName?: Dispatch<WalletName | undefined>;\n  chainName?: Dispatch<ChainName | undefined>;\n  viewOpen?: Dispatch<boolean>;\n}\n\nexport type EventName = 'refresh_connection';\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}