{"version":3,"sources":["../../src/utils/status.ts","../../src/utils/error.ts"],"sourcesContent":["import { State, WalletStatus } from '../types';\nimport { ClientNotExistError, RejectedError } from './error';\n\nexport const getWalletStatusFromState = (\n  state: State,\n  message?: string\n): WalletStatus => {\n  switch (state) {\n    case 'Pending':\n      return WalletStatus.Connecting;\n    case 'Done':\n      return WalletStatus.Connected;\n    case 'Error':\n      switch (message) {\n        case ClientNotExistError.message:\n          return WalletStatus.NotExist;\n        case RejectedError.message:\n          return WalletStatus.Rejected;\n        default:\n          return WalletStatus.Error;\n      }\n    case 'Init':\n      return WalletStatus.Disconnected;\n    default:\n      return WalletStatus.Disconnected;\n  }\n};\n","// Wallet\nexport const ClientNotExistError = new Error('Client Not Exist!');\nexport const RejectedError = new Error('Request Rejected!');\n\n// QRCode\nexport const ExpiredError = new Error('Expired!');\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCO,IAAM,sBAAsB,IAAI,MAAM,mBAAmB;AACzD,IAAM,gBAAgB,IAAI,MAAM,mBAAmB;AAGnD,IAAM,eAAe,IAAI,MAAM,UAAU;;;ADFzC,IAAM,2BAA2B,CACtC,OACA,YACiB;AACjB,UAAQ,OAAO;AAAA,IACb,KAAK;AACH;AAAA,IACF,KAAK;AACH;AAAA,IACF,KAAK;AACH,cAAQ,SAAS;AAAA,QACf,KAAK,oBAAoB;AACvB;AAAA,QACF,KAAK,cAAc;AACjB;AAAA,QACF;AACE;AAAA,MACJ;AAAA,IACF,KAAK;AACH;AAAA,IACF;AACE;AAAA,EACJ;AACF;","names":[]}